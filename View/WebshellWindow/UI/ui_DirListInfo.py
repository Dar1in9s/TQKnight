# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DirListInfo.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_DirListInfo(object):
    def setupUi(self, DirListInfo):
        DirListInfo.setObjectName("DirListInfo")
        DirListInfo.resize(774, 608)
        self.gridLayout = QtWidgets.QGridLayout(DirListInfo)
        self.gridLayout.setContentsMargins(0, 0, 0, -1)
        self.gridLayout.setObjectName("gridLayout")
        self.btn_pre = QtWidgets.QPushButton(DirListInfo)
        self.btn_pre.setObjectName("btn_pre")
        self.gridLayout.addWidget(self.btn_pre, 0, 0, 1, 1)
        self.btn_fileRefresh = QtWidgets.QPushButton(DirListInfo)
        self.btn_fileRefresh.setObjectName("btn_fileRefresh")
        self.gridLayout.addWidget(self.btn_fileRefresh, 0, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(DirListInfo)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 0, 2, 1, 1)
        self.lineEdit_filePath = QtWidgets.QLineEdit(DirListInfo)
        self.lineEdit_filePath.setObjectName("lineEdit_filePath")
        self.gridLayout.addWidget(self.lineEdit_filePath, 0, 3, 1, 1)
        self.btn_fileOpen = QtWidgets.QPushButton(DirListInfo)
        self.btn_fileOpen.setObjectName("btn_fileOpen")
        self.gridLayout.addWidget(self.btn_fileOpen, 0, 4, 1, 1)
        self.tableWidget_file = QtWidgets.QTableWidget(DirListInfo)
        self.tableWidget_file.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_file.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget_file.setShowGrid(False)
        self.tableWidget_file.setRowCount(0)
        self.tableWidget_file.setColumnCount(5)
        self.tableWidget_file.setObjectName("tableWidget_file")
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_file.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_file.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_file.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_file.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_file.setHorizontalHeaderItem(4, item)
        self.tableWidget_file.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_file.verticalHeader().setVisible(False)
        self.gridLayout.addWidget(self.tableWidget_file, 1, 0, 1, 5)

        self.retranslateUi(DirListInfo)
        QtCore.QMetaObject.connectSlotsByName(DirListInfo)

    def retranslateUi(self, DirListInfo):
        _translate = QtCore.QCoreApplication.translate
        DirListInfo.setWindowTitle(_translate("DirListInfo", "Form"))
        self.btn_pre.setText(_translate("DirListInfo", "上一级"))
        self.btn_fileRefresh.setText(_translate("DirListInfo", "刷新"))
        self.label_7.setText(_translate("DirListInfo", "     文件路径："))
        self.btn_fileOpen.setText(_translate("DirListInfo", "打开"))
        item = self.tableWidget_file.horizontalHeaderItem(0)
        item.setText(_translate("DirListInfo", "名称"))
        item = self.tableWidget_file.horizontalHeaderItem(1)
        item.setText(_translate("DirListInfo", "修改时间"))
        item = self.tableWidget_file.horizontalHeaderItem(2)
        item.setText(_translate("DirListInfo", "类型"))
        item = self.tableWidget_file.horizontalHeaderItem(3)
        item.setText(_translate("DirListInfo", "大小"))
        item = self.tableWidget_file.horizontalHeaderItem(4)
        item.setText(_translate("DirListInfo", "权限"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    DirListInfo = QtWidgets.QWidget()
    ui = Ui_DirListInfo()
    ui.setupUi(DirListInfo)
    DirListInfo.show()
    sys.exit(app.exec_())
